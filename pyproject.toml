[project]
name = "udsv4-redcap-qc-validator"         # The name of your Python project/package
version = "0.1.0"                          # Initial version of the project
description = "QC validator for UDSv4 REDCap data"  # Short description of the project
authors = [
    { name="John Torres", email="sdccunm.john@gmail.com" }
]
maintainers = [
  {name = "John Torres", email = "sdccunm.john@gmail.com"}
]
readme = "README.md"                       # Path to the README file
requires-python = ">=3.12"                  # Minimum Python version required
dependencies = [
    "cerberus>=1.3.5",
    "python-dateutil>=2.9.0",
    "pytest>=7.2.0",
    "types-python-dateutil>=2.9.0.20240316",
    "json-logic",
    "python-dotenv",
    "jsonschema",
    "pandas",
    "requests",
    "setuptools",
    "IPython",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0"
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["pipeline", "cli"]

[project.scripts]
udsv4-qc = "cli.cli:cli"

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "wheel>=0.40.0",
    "build>=0.10.0",
    "twine>=4.0.0"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]   # Build system requirements
build-backend = "setuptools.build_meta"     # Build backend to use setuptools

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=qc_pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["qc_pipeline"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]